REM = root em, it is used to define its size relative to the root element which is typically html element
FONT WEIGHT = Boldness or thickness of the Text
    -it can also be relative to the parent typically using the keywork BOLDER or LIGHTER   
    -LIGHTER = -100
    -BOLDER = +100
FONT TYPE = X , Y , Z 
    -They are seperated by the commas because they may be present on some devices and not present on some
    -"" in case of spaces in the name of the font family we simply can writw it in spaces we have to include it in Quiotatiions
TEXT-ALIGN = it is used to align text 
    -it is only applicable on text elements
    -using it on a div which conatins both text and non text elements it will only effect text elements
CHROME DEVLOPER TOOLS - they help you to get stuff done(CSS) 



EACH element is Box in of Itslef (WIDTH & HEIGHT)
    -it can be changed using the pxx for reffernece 
    -or it can be changed by using %(i,e percent of the screen)
BODER = 1(THICKESS OF TH LINE IS IS MADE UP OF,Box exands outward), 2(STYLE OF THE BOREDER), 3(COLOUR OF THE BORDER)
    -BORDER WIDTH = UPPER, RIGHT SIDE, LOWER SIDE. LEFT SIDE
    -BORDER-TOP,LEFT,RIGHT,BOTTOM = CAN DO THE SAME THING BUT IT DOES IT INDIVIDUALLY
PADDING - PUSH'S BORDER OUT BT THE VALUE 
MARGIN - POSITON OUTSIDE THE BORDER, DISTANCE FROM TWO ELEMENT  
    -this is what the recangular structures in the chrome developer tools represent
    -maring -> border -> padding -> width and height

CONTENT DIV ELEMENT - INVIISIBLE
    -GROUPS ELEMENTS TOGETHER




IN ORDER TO ADD A FAVICON... 
Link it in the tile of the html 
give it relation as icon (rel="icon")
then refference it in the to its location in the files(heref="./hello.jpg")
//doing this much only will also add the favicon 
adding type attribte, it helps it to be compatible woth other browsers also


CASCASDING = how are rules applied in css(on a+ single element)
    
    -order of rules
    -FIRST LEVEL= external css -  least priortized 
    -SECOND LEVEL = internal - 
    -THIRRD LEVEL = inline - most priortized 

POSITION OF RULE(WHICH IS PZED FIRST)\
    -the lower down in a cascade a property is the more imporant it is
    -   color: blue;
        color: red(this one will be applied)


SPECIFICITY(which tagets over other )
    -ORDER OF SPECIFITY
        ID(most spcifific) > ATTRIBUTE > CLASS > ELEMENT(least spectfic)

IMPORTANT KEYWORD
    -where ever you put this keywork it will automatically priortize that attribute over all the othr attributed in the whole document
    -it dosent matter after this what the origianl specifity of the element was

#css can be added to a bunch of elements together, by grouping them before adding css to them seperated by comma
#child = one level down(needs to be seperated by space)
#specifiity = we can target a element first then add class and id for specifity in order to make it target that one specific elment only
    -(h1.hello#name)      -this means we are targetting element which has a  class name(hello) and a id of(name)
    -there should be no space in between 
    -first item should be the element in this case 



                                                    POSITONING

1. STATIC
    -default
    -continious in the flow just, element or div just next to the previous POSITION
    -adding of different attributes to chnage its position wont do any thing 

2. RELATIVE
    -realtive to origianl(static)
    -we can move it relatively

3. ABSOLUTE
    -relative to most recent anscestor(i.e postion of the most recent ancestor that ancestor should have position set manually) 
    -if there is no recent ancestor with postion set then it will be with respect to the upper left corner
    <Z INDEX - Z AXIS>
        -VERY THIN HAS A "Z AXIS " BY DEFAULT OF ZERO
        -WE CAN MAKE ONE ELEMENT HOVER OVER THE OTHER ELEMENT

4. FIXED
    - relative to the top left corner of the webpage
    -it wil not move when we move/scroll the browser horizontally or vertically
    -it is fixed on a single point



                                        DISPLAY

appbrewery.github.io/css-display/

1. BLOCK
    - full width BLOCK it will take the whole horizontal of that element 
    -next element will go below 
    - we can change the height and width of the block element 

2.INLINE
    -it is used to add two  different elements in a single line
    -are elements that do not start on a new line but instead flow alongside the surrounding content or other inline elements.
    -you cant change the height and width of the inline display

3.INLINE BLOCK
    -we can chamge the height and width of the element and can determine how much of the horizontal and vertical space occupied by it

4. NONE
    -

SPAN ELEMENT - element has display set to inline by default
            - it is used to add atrribute to  very specific part of the text or something else which is already present in an element



                                        FLOAT

You're essentially taking it out of the normal document flow and positioning it to the left or right of its containing element.

LEFT
    -this pushes the element the left 
    -rest of the content will flow to the right of the screen 

RIGHT 
    -this will push the element to the right 
    -rest of the content will flow towards the right of the screen

NONE 
    -this is its value by the default i.e it will occupy the whole vertical  row

<>To prevent a element form going with this flow clear property can be used 
    - clear : left;
        OR
    - clear : right;    (left and right)





                                            RESPONSIVE(CSS)

-RESPONSIVE in terms of screen size change when you change a screen size the elements on the screen also change respectvelly
-manly of 4 types
    1. MEDIA QUERRY 
    2.CSS GRID = forms 2d grids
    3.CSS FLEXBOX = mainly used for one D formation 
    4.EXTENAL FRAMEWORKS(eg BOOTSTRAP)
    <FRAME WORK = EXTERNAL>


                                            MEDIA QUERRIES

@media (max-width: 600px) {
   Styles that apply to all media types when the screen width is 600px or narrower 
}

- () has the breakpoint to apply the css given  in the{}
- is basically an if statement for css
- screen keyoword > only target screen 
- print keywod > target print settings

<these statement make the page automatically responsive because if oe chnages all the othe will change accordinglly>




                                                        WEBSITE LAYOUT

table element - <tabel>             should specically be used to create text related categories it should not be used to create layouts
float = shoud mainly be used to wrap the text around an elemment it should also not be used to create layouts

                                                         FLEXBOX

-display flex ()







 










